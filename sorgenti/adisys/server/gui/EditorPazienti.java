/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package adisys.server.gui;

import adisys.server.business.TOPaziente;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import adisys.server.presentation.frontController.FrontController;
import adisys.server.presentation.frontController.Fc;
import adisys.server.utility.DateFormatConverter;
import javax.swing.table.DefaultTableModel;

/**
 * The Class EditorPazienti.
 * Finestra che permette di inserire, modificare 
 * o cancellare i dati relativi a uno o a tutti 
 * i pazienti. Eâ€™ possibile interfacciarsi con la 
 * finestra EditorInterventi.
 * 
 */
public final class EditorPazienti extends javax.swing.JDialog {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The Constant FORMATO_DATA_NASCITA. */
	private static final String FORMATO_DATA_NASCITA = "dd/MM/yyyy";

	/** The i fc. */
	private FrontController iFc = Fc.getInstance();

	/**
	 * Creates new form dialogoPazienti.
	 * 
	 * @param parent
	 *            the parent
	 * @param modal
	 *            the modal
	 */
	public EditorPazienti(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		modelloListaCellulari = new DefaultListModel<>();
		aggiornaTabella();
		impostaModuloNuovoPaziente();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		immagineTestataPazienti = new javax.swing.JLabel();
		jScrollPane4 = new javax.swing.JScrollPane();
		tabellaPazienti = new javax.swing.JTable();
		jPanel23 = new javax.swing.JPanel();
		txErrore = new javax.swing.JLabel();
		labelCellulare = new javax.swing.JLabel();
		txCellularePaziente = new javax.swing.JFormattedTextField();
		labelCognome = new javax.swing.JLabel();
		txCognomePaziente = new javax.swing.JTextField();
		labelNome = new javax.swing.JLabel();
		txNomePaziente = new javax.swing.JTextField();
		pulsanteOk = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		labelID = new javax.swing.JLabel();
		labelDataNascita = new javax.swing.JLabel();
		txDataNascita = new javax.swing.JFormattedTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		listaCellulari = new javax.swing.JList<String>();
		pRemCellulare = new javax.swing.JButton();
		pAddCellulare = new javax.swing.JButton();
		jToolBar1 = new javax.swing.JToolBar();
		pulsanteAggiungi = new javax.swing.JButton();
		pulsanteModifica = new javax.swing.JButton();
		pulsanteCancella = new javax.swing.JButton();
		pulsanteCancellaTutti = new javax.swing.JButton();
		jButtonApriPianificatore = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jButtonApriInterventi = new javax.swing.JButton();
		jButtonApriInfermieri = new javax.swing.JButton();
		jButtonApriPazienti = new javax.swing.JButton();
		jButton1 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setMinimumSize(new java.awt.Dimension(640, 480));
		setModal(true);
		setResizable(false);
		setType(java.awt.Window.Type.POPUP);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowActivated(java.awt.event.WindowEvent evt) {
				formWindowActivated(evt);
			}

			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		immagineTestataPazienti
				.setIcon(new javax.swing.ImageIcon(getClass().getResource(
						"/adisys/server/img/decorazioniFinestre/Pazienti.png"))); // NOI18N

		tabellaPazienti.setToolTipText("Premere \"p\" per info sul paziente");
		tabellaPazienti
				.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		tabellaPazienti.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tabellaPazientiKeyPressed(evt);
			}
		});
		jScrollPane4.setViewportView(tabellaPazienti);

		jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		txErrore.setForeground(new java.awt.Color(255, 0, 0));
		txErrore.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		txErrore.setText(Fc.MessageBundle("UIMsg220")); // NOI18N
		txErrore.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		labelCellulare.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		labelCellulare.setText(Fc.MessageBundle("UIMsg200")); // NOI18N
		labelCellulare.setToolTipText("");
		labelCellulare
				.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		txCellularePaziente
				.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
						new javax.swing.text.NumberFormatter(
								new java.text.DecimalFormat("#0"))));

		labelCognome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		labelCognome.setText(Fc.MessageBundle("UIMsg190")); // NOI18N
		labelCognome.setToolTipText("");
		labelCognome.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		labelNome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		labelNome.setText(Fc.MessageBundle("UIMsg180")); // NOI18N
		labelNome.setToolTipText("");
		labelNome.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		pulsanteOk.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/iconainserisci.png"))); // NOI18N
		pulsanteOk.setText("Ok");
		pulsanteOk.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		pulsanteOk.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteOkActionPerformed(evt);
			}
		});

		jLabel3.setText("ID:");
		jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		labelID.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		labelDataNascita
				.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		labelDataNascita.setText(Fc.MessageBundle("UIMsg210")); // NOI18N
		labelDataNascita.setToolTipText("");
		labelDataNascita
				.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		txDataNascita
				.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
						new javax.swing.text.DateFormatter(
								new java.text.SimpleDateFormat("dd/MM/yyyy"))));

		listaCellulari
				.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		jScrollPane1.setViewportView(listaCellulari);

		pRemCellulare.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/rem/normale.png"))); // NOI18N
		pRemCellulare.setBorder(null);
		pRemCellulare.setPressedIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/rem/down.png"))); // NOI18N
		pRemCellulare.setRolloverIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/rem/over.png"))); // NOI18N
		pRemCellulare.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pRemCellulareActionPerformed(evt);
			}
		});

		pAddCellulare.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/add/normale.png"))); // NOI18N
		pAddCellulare.setBorder(null);
		pAddCellulare.setPressedIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/add/down.png"))); // NOI18N
		pAddCellulare.setRolloverIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/add/over.png"))); // NOI18N
		pAddCellulare.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pAddCellulareActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(
				jPanel23);
		jPanel23.setLayout(jPanel23Layout);
		jPanel23Layout
				.setHorizontalGroup(jPanel23Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel23Layout
										.createSequentialGroup()
										.addGap(10, 10, 10)
										.addGroup(
												jPanel23Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addGroup(
																jPanel23Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel23Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								labelDataNascita)
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addComponent(
																												txDataNascita,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												150,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(30,
																												30,
																												30)
																										.addComponent(
																												jLabel3)
																										.addGap(15,
																												15,
																												15)
																										.addComponent(
																												labelID,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												120,
																												javax.swing.GroupLayout.PREFERRED_SIZE))
																						.addComponent(
																								txErrore,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								360,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addGap(20,
																				20,
																				20)
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				150,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				pRemCellulare,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				33,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(
																jPanel23Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel23Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								false)
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addComponent(
																												labelNome,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												150,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(20,
																												20,
																												20)
																										.addComponent(
																												labelCognome,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												Short.MAX_VALUE))
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addComponent(
																												txNomePaziente,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												150,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(20,
																												20,
																												20)
																										.addComponent(
																												txCognomePaziente,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												150,
																												javax.swing.GroupLayout.PREFERRED_SIZE)))
																		.addGap(60,
																				60,
																				60)
																		.addGroup(
																				jPanel23Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								txCellularePaziente,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								150,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								labelCellulare,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								100,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				pAddCellulare,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												41, Short.MAX_VALUE)
										.addComponent(
												pulsanteOk,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												90,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap()));
		jPanel23Layout
				.setVerticalGroup(jPanel23Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel23Layout
										.createSequentialGroup()
										.addGroup(
												jPanel23Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(
																jPanel23Layout
																		.createSequentialGroup()
																		.addGap(0,
																				0,
																				Short.MAX_VALUE)
																		.addComponent(
																				pulsanteOk,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				40,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(
																jPanel23Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel23Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addGap(10,
																												10,
																												10)
																										.addGroup(
																												jPanel23Layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																labelNome,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																20,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																labelCognome,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																20,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																labelCellulare,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																20,
																																javax.swing.GroupLayout.PREFERRED_SIZE))
																										.addGroup(
																												jPanel23Layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																txNomePaziente,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																txCognomePaziente,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																txCellularePaziente,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																javax.swing.GroupLayout.PREFERRED_SIZE)))
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addGap(22,
																												22,
																												22)
																										.addComponent(
																												pAddCellulare,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												33,
																												javax.swing.GroupLayout.PREFERRED_SIZE)))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				jPanel23Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addComponent(
																												labelDataNascita,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												20,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGroup(
																												jPanel23Layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																txDataNascita,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																jLabel3)
																														.addComponent(
																																labelID))
																										.addGap(10,
																												10,
																												10)
																										.addComponent(
																												txErrore,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												Short.MAX_VALUE))
																						.addGroup(
																								jPanel23Layout
																										.createSequentialGroup()
																										.addGroup(
																												jPanel23Layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																jScrollPane1,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																60,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																pRemCellulare,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																33,
																																javax.swing.GroupLayout.PREFERRED_SIZE))
																										.addGap(0,
																												0,
																												Short.MAX_VALUE)))))
										.addContainerGap()));

		jToolBar1.setFloatable(false);

		pulsanteAggiungi.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaAggiungi.png"))); // NOI18N
		pulsanteAggiungi.setText(Fc.MessageBundle("UIMsg140")); // NOI18N
		pulsanteAggiungi.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteAggiungiActionPerformed(evt);
			}
		});
		jToolBar1.add(pulsanteAggiungi);

		pulsanteModifica.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaModifica.png"))); // NOI18N
		pulsanteModifica.setText(Fc.MessageBundle("UIMsg150")); // NOI18N
		pulsanteModifica.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteModificaActionPerformed(evt);
			}
		});
		jToolBar1.add(pulsanteModifica);

		pulsanteCancella.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaCancella.png"))); // NOI18N
		pulsanteCancella.setText(Fc.MessageBundle("UIMsg160")); // NOI18N
		pulsanteCancella.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteCancellaActionPerformed(evt);
			}
		});
		jToolBar1.add(pulsanteCancella);

		pulsanteCancellaTutti.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource(
						"/adisys/server/img/pulsanti/IconaCancellaTutti.png"))); // NOI18N
		pulsanteCancellaTutti.setText(Fc.MessageBundle("UIMsg170")); // NOI18N
		pulsanteCancellaTutti.setFocusable(false);
		pulsanteCancellaTutti
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						pulsanteCancellaTuttiActionPerformed(evt);
					}
				});
		jToolBar1.add(pulsanteCancellaTutti);

		jButtonApriPianificatore.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/Home.png"))); // NOI18N
		jButtonApriPianificatore.setToolTipText(Fc.MessageBundle("UIMsg95")); // NOI18N
		jButtonApriPianificatore
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonApriPianificatoreActionPerformed(evt);
					}
				});

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(0, 102, 0));
		jLabel2.setText(Fc.MessageBundle("UIMsg230")); // NOI18N

		jButtonApriInterventi
				.setIcon(new javax.swing.ImageIcon(getClass().getResource(
						"/adisys/server/img/pulsanti/IconaInterventi.png"))); // NOI18N
		jButtonApriInterventi.setToolTipText(Fc.MessageBundle("UIMsg90")); // NOI18N
		jButtonApriInterventi
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonApriInterventiActionPerformed(evt);
					}
				});

		jButtonApriInfermieri
				.setIcon(new javax.swing.ImageIcon(getClass().getResource(
						"/adisys/server/img/pulsanti/IconaInfermieri.png"))); // NOI18N
		jButtonApriInfermieri.setToolTipText(Fc.MessageBundle("UIMsg80")); // NOI18N
		jButtonApriInfermieri.setPreferredSize(new java.awt.Dimension(33, 33));
		jButtonApriInfermieri
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonApriInfermieriActionPerformed(evt);
					}
				});

		jButtonApriPazienti.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaPazienti.png"))); // NOI18N
		jButtonApriPazienti.setEnabled(false);
		jButtonApriPazienti.setPreferredSize(new java.awt.Dimension(33, 33));

		jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/IconaPatologie.png"))); // NOI18N
		jButton1.setToolTipText(Fc.MessageBundle("UIMsg65")); // NOI18N
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jScrollPane4)
												.addComponent(
														jToolBar1,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jPanel23,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		immagineTestataPazienti)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jLabel2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		137,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButtonApriPazienti,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButtonApriInfermieri,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButtonApriInterventi,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButtonApriPianificatore,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														jButtonApriPianificatore,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														33,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														immagineTestataPazienti)
												.addComponent(
														jLabel2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														40,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButtonApriInfermieri,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButtonApriInterventi,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														33,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		jButtonApriPazienti,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGap(17, 17, 17)
								.addComponent(jScrollPane4,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										206,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jToolBar1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanel23,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE).addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/** The window. */
	private static EditorPazienti window;

	/**
	 * Pulsante ok action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteOkActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteOkActionPerformed

		if (modalita == Modalita.aggiungi) {
			// Caso no ID -> NUOVO PAZIENTE: effettua l'inserimento
			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			ArrayList<Object> par = new ArrayList<>();

			// par = new ArrayList<Object>();
			par.add("String");
			par.add((Object) txNomePaziente.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) txCognomePaziente.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) txDataNascita.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) FORMATO_DATA_NASCITA);
			parametri.add(par);

			par = new ArrayList<>();
			par.add("Object");
			par.add(modelloListaCellulari.toArray());
			parametri.add(par);

			iFc.processRequest("creaPaziente", parametri);
		} else if (modalita == Modalita.modifica
				&& JOptionPane.showConfirmDialog(null,
						Fc.MessageBundle("ConfirmMsg150"),
						Fc.MessageBundle("ConfirmMsg10"),
						JOptionPane.OK_CANCEL_OPTION,
						JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
			// Caso ID noto modifica i dati
			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			ArrayList<Object> par = new ArrayList<>();

			// par = new ArrayList<Object>();
			par.add("String");
			par.add((Object) labelID.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) txNomePaziente.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) txCognomePaziente.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) txDataNascita.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) FORMATO_DATA_NASCITA);
			parametri.add(par);

			par = new ArrayList<>();
			par.add("Object");
			par.add(modelloListaCellulari.toArray());
			parametri.add(par);

			iFc.processRequest("modificaPaziente", parametri);
		}

		aggiornaTabella();
	}// GEN-LAST:event_pulsanteOkActionPerformed

	/**
	 * Pulsante modifica action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteModificaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteModificaActionPerformed

		impostaModuloModificaPaziente();

	}// GEN-LAST:event_pulsanteModificaActionPerformed

	/**
	 * Pulsante aggiungi action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteAggiungiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteAggiungiActionPerformed

		if (modalita == Modalita.aggiungi) {
			JOptionPane.showMessageDialog(null,
					Fc.MessageBundle("MsgDialog1940"),
					Fc.MessageBundle("MsgDialog4"),
					JOptionPane.INFORMATION_MESSAGE);
		} else {

			impostaModuloNuovoPaziente();
		}
	}// GEN-LAST:event_pulsanteAggiungiActionPerformed

	/**
	 * Pulsante cancella action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteCancellaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteCancellaActionPerformed

		if (tabellaPazienti.getSelectedRow() == -1) {
			// Non si cono pazienti selezionati. Nessuna cancellazione possibile
			JOptionPane.showMessageDialog(
					this,
					Fc.MessageBundle("MsgDialog160") + "\n"
							+ Fc.MessageBundle("MsgDialog75"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);
		} else {

			if (JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg130"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {

				int colonnaID = tabellaPazienti.getColumnModel()
						.getColumnIndex("ID");
				int selectedID = Integer
						.valueOf(String.valueOf(tabellaPazienti.getValueAt(
								tabellaPazienti.getSelectedRow(), colonnaID)));
				// ADISysController.cancellaPaziente(selectedID);
				ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
				ArrayList<Object> par = new ArrayList<>();

				// par = new ArrayList<Object>();
				par.add("String");
				par.add((Object) selectedID);
				parametri.add(par);

				iFc.processRequest("cancellaPaziente", parametri);

				aggiornaTabella();

			} else {
				JOptionPane.showMessageDialog(null,
						Fc.MessageBundle("msgDialog220"));
			}
		}
	}// GEN-LAST:event_pulsanteCancellaActionPerformed

	/**
	 * Pulsante cancella tutti action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteCancellaTuttiActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteCancellaTuttiActionPerformed

		if (JOptionPane.showConfirmDialog(null,
				Fc.MessageBundle("ConfirmMsg140"),
				Fc.MessageBundle("ConfirmMsg10"), JOptionPane.OK_CANCEL_OPTION,
				JOptionPane.WARNING_MESSAGE) == JOptionPane.OK_OPTION) {

			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			iFc.processRequest("cancellaTuttiPazienti", parametri);
		}
	}// GEN-LAST:event_pulsanteCancellaTuttiActionPerformed

	/**
	 * Form window activated.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void formWindowActivated(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowActivated
		aggiornaTabella();
	}// GEN-LAST:event_formWindowActivated

	/**
	 * P add cellulare action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pAddCellulareActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pAddCellulareActionPerformed
		if (!txCellularePaziente.getText().isEmpty()) {
			// Aggiunge il nuovo numero alla lista
			modelloListaCellulari.addElement(txCellularePaziente.getText());

			// Aggiorna la view
			listaCellulari.setModel(modelloListaCellulari);

			// Svuota il campo di inserimento
			txCellularePaziente.setText("");
		} else {
			JOptionPane.showMessageDialog(null,
					Fc.MessageBundle("MsgDialog170"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);
		}

	}// GEN-LAST:event_pAddCellulareActionPerformed

	/**
	 * P rem cellulare action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pRemCellulareActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pRemCellulareActionPerformed
		// Ricava l'indice dell'elemento selezionato
		int indice = listaCellulari.getSelectedIndex();

		// Se l'indice ï¿½ valido (c'ï¿½ un elem selezionato) rimuove l'elemento
		if (indice != -1) {
			if (JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg270"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {

				modelloListaCellulari.remove(indice);
			}
		} else {
			JOptionPane.showMessageDialog(null,
					Fc.MessageBundle("MsgDialog85"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);
		}

		// Aggiorna la view
		listaCellulari.setModel(modelloListaCellulari);
	}// GEN-LAST:event_pRemCellulareActionPerformed

	/**
	 * Tabella pazienti key pressed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void tabellaPazientiKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tabellaPazientiKeyPressed
		if (evt.getKeyChar() == 'p' || evt.getKeyChar() == 'P') {
			// Recupero valore ID
			int colonnaID = tabellaPazienti.getColumnModel().getColumnIndex(
					"ID");
			int selectedID = Integer.valueOf(String.valueOf(tabellaPazienti
					.getValueAt(tabellaPazienti.getSelectedRow(), colonnaID)));

			// Recupero informazioni
			if (selectedID != -1) {
				ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
				ArrayList<Object> par = new ArrayList<>();

				par.add("int");
				par.add((Object) selectedID);
				parametri.add(par);

				String msg = (String) iFc.processRequest("showInfoPaziente",
						parametri);
				JOptionPane.showMessageDialog(null, msg);
			}
		}
	}// GEN-LAST:event_tabellaPazientiKeyPressed

	/**
	 * J button apri pianificatore action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButtonApriPianificatoreActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonApriPianificatoreActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg25"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			setVisible(false);
		}
	}// GEN-LAST:event_jButtonApriPianificatoreActionPerformed

	/**
	 * J button apri interventi action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButtonApriInterventiActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonApriInterventiActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg43"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			iFc.processRequest("visualizzaEditorInterventi", parametri);
			this.setVisible(false);
		}
	}// GEN-LAST:event_jButtonApriInterventiActionPerformed

	/**
	 * Form window closing.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		int result = 0;
		if (!fieldsAreEmpty())
			result = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg35"), Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
		else
			result = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg30"), Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

		if (result == JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}// GEN-LAST:event_formWindowClosing

	/**
	 * J button apri infermieri action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButtonApriInfermieriActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonApriInfermieriActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg15"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			setVisible(false);
			iFc.processRequest("visualizzaEditorInfermieri",
					new ArrayList<ArrayList<Object>>());
		}
	}// GEN-LAST:event_jButtonApriInfermieriActionPerformed

	/**
	 * J button1 action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		//
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg15"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			iFc.processRequest("visualizzaEditorPatologie",
					new ArrayList<ArrayList<Object>>());
			this.setVisible(false);
		}
	}// GEN-LAST:event_jButton1ActionPerformed

	/**
	 * Aggiorna tabella.
	 */
	public void aggiornaTabella() {

		// Popolamento dati
		@SuppressWarnings("unchecked")
		ArrayList<TOPaziente> listaPazienti = (ArrayList<TOPaziente>) iFc
				.processRequest("getTabellaPazienti",
						new ArrayList<ArrayList<Object>>());
		TOPaziente toPaziente;
		DefaultTableModel model = new DefaultTableModel();

		// Assegnazione nomi colonne tabella
		String[] headers = Fc.getTableHeaderNames("JTableEditorPazienti");
		model.setColumnIdentifiers(headers);

		// inserimento dei transfer objects nella tabella
		int tLength = listaPazienti.size();
		for (int i = 0; i < tLength; i++) {
			toPaziente = listaPazienti.get(i);
			String[] row = { String.valueOf(toPaziente.getID()),
					toPaziente.getNome(), toPaziente.getCognome(),
					toPaziente.getDataNascita("yyyy-MM-dd") };
			model.addRow(row);
		}
		tabellaPazienti.setModel(model);
	}

	/**
	 * Start.
	 * 
	 * @param args
	 *            the command line arguments
	 */
	public static void start(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException
				| javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EditorPazienti.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			// @Override
			public void run() {
				window = new EditorPazienti(new javax.swing.JFrame(), true);
				Dimension risoluzioneSchermo = Toolkit.getDefaultToolkit()
						.getScreenSize();
				window.setLocation(new Point((risoluzioneSchermo.width - window
						.getWidth()) / 2, (risoluzioneSchermo.height - window
						.getHeight()) / 2));
				window.setVisible(true);
			}
		});
	}

	/**
	 * Imposta modulo nuovo paziente.
	 */
	public void impostaModuloNuovoPaziente() {

		modalita = Modalita.aggiungi;
		// Inserimento nel modulo
		labelID.setText("-1");
		txNomePaziente.setText("");
		txCognomePaziente.setText("");
		txDataNascita.setText("");
		txCellularePaziente.setText("");
		modelloListaCellulari.clear();
		listaCellulari.setModel(modelloListaCellulari);

		// Commento
		txErrore.setText(Fc.MessageBundle("MsgDialog650"));
	}

	/**
	 * Imposta modulo modifica paziente.
	 */
	@SuppressWarnings("unchecked")
	public void impostaModuloModificaPaziente() {
		if (tabellaPazienti.getSelectedRow() == -1) {
			// Non si cono pazienti selezionati. Nessuna modifica possibile
			JOptionPane.showMessageDialog(
					null,
					Fc.MessageBundle("MsgDialog180") + "\n"
							+ Fc.MessageBundle("MsgDialog55"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);

		} else {

			modalita = Modalita.modifica;
			// Identificazione delle colonne
			String[] colonne = Fc.getTableHeaderNames("JTableEditorPazienti");
			int colonnaID = tabellaPazienti.getColumnModel().getColumnIndex(
					colonne[0]);
			int colonnaNome = tabellaPazienti.getColumnModel().getColumnIndex(
					colonne[1]);
			int colonnaCognome = tabellaPazienti.getColumnModel()
					.getColumnIndex(colonne[2]);
			int colonnaDataNascita = tabellaPazienti.getColumnModel()
					.getColumnIndex(colonne[3]);

			// Nel caso non sia identificata la colonna ID
			if (colonnaID < 0) {
				JOptionPane.showMessageDialog(this,
						Fc.MessageBundle("MsgDialog190"));
				return;
			}

			// Lettura dei valori
			Object selectedID = tabellaPazienti.getValueAt(
					tabellaPazienti.getSelectedRow(), colonnaID);
			Object selectedNome = tabellaPazienti.getValueAt(
					tabellaPazienti.getSelectedRow(), colonnaNome);
			Object selectedCognome = tabellaPazienti.getValueAt(
					tabellaPazienti.getSelectedRow(), colonnaCognome);
			Object selectedDataNascita = DateFormatConverter.cambiaFormato(
					tabellaPazienti.getValueAt(
							tabellaPazienti.getSelectedRow(),
							colonnaDataNascita).toString(), "yyyy-MM-dd",
					"dd/MM/yyyy");

			// Inserimento nel modulo
			labelID.setText(String.valueOf(selectedID));
			txNomePaziente.setText(String.valueOf(selectedNome));
			txCognomePaziente.setText(String.valueOf(selectedCognome));
			txDataNascita.setText(String.valueOf(selectedDataNascita));

			// Caricamento numeri di cellulare

			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			ArrayList<Object> par = new ArrayList<>();

			// par = new ArrayList<Object>();
			par.add("int");
			par.add((Object) Integer.valueOf((String.valueOf(selectedID))));
			parametri.add(par);

			modelloListaCellulari = (DefaultListModel<String>) iFc
					.processRequest("getCellulariPaziente", parametri);
			listaCellulari.setModel(modelloListaCellulari);

			// Commento
			txErrore.setText(Fc.MessageBundle("MsgDialog660") + (" ")
					+ String.valueOf(selectedNome) + (" ")
					+ String.valueOf(selectedCognome));
		}

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	/** The immagine testata pazienti. */
	private javax.swing.JLabel immagineTestataPazienti;

	/** The j button1. */
	private javax.swing.JButton jButton1;

	/** The j button apri infermieri. */
	private javax.swing.JButton jButtonApriInfermieri;

	/** The j button apri interventi. */
	private javax.swing.JButton jButtonApriInterventi;

	/** The j button apri pazienti. */
	private javax.swing.JButton jButtonApriPazienti;

	/** The j button apri pianificatore. */
	private javax.swing.JButton jButtonApriPianificatore;

	/** The j label2. */
	private javax.swing.JLabel jLabel2;

	/** The j label3. */
	private javax.swing.JLabel jLabel3;

	/** The j panel23. */
	private javax.swing.JPanel jPanel23;

	/** The j scroll pane1. */
	private javax.swing.JScrollPane jScrollPane1;

	/** The j scroll pane4. */
	private javax.swing.JScrollPane jScrollPane4;

	/** The j tool bar1. */
	private javax.swing.JToolBar jToolBar1;

	/** The label cellulare. */
	private javax.swing.JLabel labelCellulare;

	/** The label cognome. */
	private javax.swing.JLabel labelCognome;

	/** The label data nascita. */
	private javax.swing.JLabel labelDataNascita;

	/** The label id. */
	private javax.swing.JLabel labelID;

	/** The label nome. */
	private javax.swing.JLabel labelNome;

	/** The lista cellulari. */
	private javax.swing.JList<String> listaCellulari;

	/** The p add cellulare. */
	private javax.swing.JButton pAddCellulare;

	/** The p rem cellulare. */
	private javax.swing.JButton pRemCellulare;

	/** The pulsante aggiungi. */
	private javax.swing.JButton pulsanteAggiungi;

	/** The pulsante cancella. */
	private javax.swing.JButton pulsanteCancella;

	/** The pulsante cancella tutti. */
	private javax.swing.JButton pulsanteCancellaTutti;

	/** The pulsante modifica. */
	private javax.swing.JButton pulsanteModifica;

	/** The pulsante ok. */
	private javax.swing.JButton pulsanteOk;

	/** The tabella pazienti. */
	private javax.swing.JTable tabellaPazienti;

	/** The tx cellulare paziente. */
	private javax.swing.JFormattedTextField txCellularePaziente;

	/** The tx cognome paziente. */
	private javax.swing.JTextField txCognomePaziente;

	/** The tx data nascita. */
	private javax.swing.JFormattedTextField txDataNascita;

	/** The tx errore. */
	private javax.swing.JLabel txErrore;

	/** The tx nome paziente. */
	private javax.swing.JTextField txNomePaziente;
	// End of variables declaration//GEN-END:variables
	// Dichiarazione modello lista cellulari pazienti
	/** The modello lista cellulari. */
	private DefaultListModel<String> modelloListaCellulari;

	/**
	 * The Enum Modalita.
	 */
	private enum Modalita {

		/** The aggiungi. */
		aggiungi, /** The modifica. */
		modifica
	};

	/** The modalita. */
	private Modalita modalita;

	/**
	 * Fields are empty.
	 * 
	 * @return true, if successful
	 */
	private boolean fieldsAreEmpty() {
		if (txNomePaziente.getText().isEmpty()
				&& txCognomePaziente.getText().isEmpty()
				&& txCellularePaziente.getText().isEmpty()
				&& txDataNascita.getText().isEmpty())
			return true;
		else
			return false;
	}
}
