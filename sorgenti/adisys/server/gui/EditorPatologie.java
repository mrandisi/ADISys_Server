/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package adisys.server.gui;

import adisys.server.business.TOPatologia;
import adisys.server.presentation.frontController.Fc;
import adisys.server.presentation.frontController.FrontController;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 * The Class EditorPatologie.
 * Finestra che permette di inserire, modificare o cancellare i dati 
 * relativi a una patologia. Non è possibile cancellare tutte le patologie. 
 * La finestra Editor Patologie, è visualizzabile solo mediante Editor Interventi. 
 * E’ possibile interfacciarsi con la finestra EditorInterventi. 
 * 
 */
public final class EditorPatologie extends javax.swing.JDialog {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The i fc. */
	private FrontController iFc = Fc.getInstance();

	/**
	 * Creates new form EditorPatologie.
	 * 
	 * @param parent
	 *            the parent
	 * @param modal
	 *            the modal
	 */
	public EditorPatologie(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		aggiornaTabella();
		setAggiungiPatologia();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "unchecked", "rawtypes" })
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane8 = new javax.swing.JScrollPane();
		tabellaPatologie = new javax.swing.JTable();
		jPanel1 = new javax.swing.JPanel();
		pulsanteCancella = new javax.swing.JButton();
		pulsanteModifica = new javax.swing.JButton();
		pulsanteAggiungi = new javax.swing.JButton();
		pannelloModifica = new javax.swing.JPanel();
		textID = new javax.swing.JTextField();
		textNome = new javax.swing.JTextField();
		pulsanteOK = new javax.swing.JButton();
		jLabel21 = new javax.swing.JLabel();
		jLabel22 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		txInfo = new javax.swing.JTextArea();
		jLabel1 = new javax.swing.JLabel();
		fieldGravita = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();
		jButton3 = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		jButtonGoHome = new javax.swing.JButton();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButtonApriPatologie = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		tabellaPatologie.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		jScrollPane8.setViewportView(tabellaPatologie);
		tabellaPatologie.getAccessibleContext().setAccessibleParent(
				tabellaPatologie);

		pulsanteCancella.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaCancella.png"))); // NOI18N
		pulsanteCancella.setText(Fc.MessageBundle("UIMsg270")); // NOI18N
		pulsanteCancella
				.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		pulsanteCancella.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteCancellaActionPerformed(evt);
			}
		});

		pulsanteModifica.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaModifica.png"))); // NOI18N
		pulsanteModifica.setText(Fc.MessageBundle("UIMsg260")); // NOI18N
		pulsanteModifica
				.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		pulsanteModifica.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteModificaActionPerformed(evt);
			}
		});

		pulsanteAggiungi.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/adisys/server/img/pulsanti/IconaAggiungi.png"))); // NOI18N
		pulsanteAggiungi.setText(Fc.MessageBundle("UIMsg250")); // NOI18N
		pulsanteAggiungi
				.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		pulsanteAggiungi.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteAggiungiActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																pulsanteAggiungi,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																pulsanteModifica,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																pulsanteCancella,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																239,
																Short.MAX_VALUE))
										.addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel1Layout
										.createSequentialGroup()
										.addGap(6, 6, 6)
										.addComponent(pulsanteAggiungi)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(pulsanteModifica)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(pulsanteCancella)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		pulsanteOK.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/iconainseriscirossa.png"))); // NOI18N
		pulsanteOK.setText("OK");
		pulsanteOK.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pulsanteOKActionPerformed(evt);
			}
		});

		jLabel21.setText(Fc.MessageBundle("UIMsg290")); // NOI18N

		jLabel22.setText(Fc.MessageBundle("UIMsg300")); // NOI18N

		txInfo.setEditable(false);
		txInfo.setBackground(new java.awt.Color(240, 240, 240));
		txInfo.setLineWrap(true);
		txInfo.setText(Fc.MessageBundle("UIMsg280")); // NOI18N
		jScrollPane1.setViewportView(txInfo);

		jLabel1.setText(Fc.MessageBundle("UIMsg310")); // NOI18N

		fieldGravita.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "1", "2", "3", "4", "5" }));
		fieldGravita.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				fieldGravitaActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pannelloModificaLayout = new javax.swing.GroupLayout(
				pannelloModifica);
		pannelloModifica.setLayout(pannelloModificaLayout);
		pannelloModificaLayout
				.setHorizontalGroup(pannelloModificaLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pannelloModificaLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												pannelloModificaLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																pannelloModificaLayout
																		.createSequentialGroup()
																		.addComponent(
																				jLabel1)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(
																				fieldGravita,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(
																pannelloModificaLayout
																		.createSequentialGroup()
																		.addGroup(
																				pannelloModificaLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								jLabel22)
																						.addComponent(
																								jScrollPane1,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								240,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								jLabel21)
																						.addComponent(
																								textNome,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								240,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addGap(0,
																				0,
																				Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																pannelloModificaLayout
																		.createSequentialGroup()
																		.addGap(0,
																				0,
																				Short.MAX_VALUE)
																		.addGroup(
																				pannelloModificaLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								textID,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								240,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								pulsanteOK,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								240,
																								javax.swing.GroupLayout.PREFERRED_SIZE))))
										.addContainerGap()));
		pannelloModificaLayout
				.setVerticalGroup(pannelloModificaLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pannelloModificaLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jLabel21)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												textID,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel22)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												textNome,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												pannelloModificaLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel1)
														.addComponent(
																fieldGravita,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(pulsanteOK)
										.addContainerGap(19, Short.MAX_VALUE)));

		jLabel2.setBackground(new java.awt.Color(255, 255, 255));
		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(204, 0, 204));
		jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/decorazioniFinestre/Patologie.png"))); // NOI18N

		jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/IconaInterventi.png"))); // NOI18N
		jButton3.setToolTipText(Fc.MessageBundle("UIMsg90")); // NOI18N
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		jLabel3.setForeground(new java.awt.Color(204, 0, 153));
		jLabel3.setText(Fc.MessageBundle("UIMsg240")); // NOI18N

		jButtonGoHome.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/Home.png"))); // NOI18N
		jButtonGoHome.setToolTipText(Fc.MessageBundle("UIMsg95")); // NOI18N
		jButtonGoHome.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonGoHomeActionPerformed(evt);
			}
		});

		jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/IconaInfermieri.png"))); // NOI18N
		jButton1.setToolTipText(Fc.MessageBundle("UIMsg80")); // NOI18N
		jButton1.setPreferredSize(new java.awt.Dimension(33, 33));
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/adisys/server/img/pulsanti/IconaPazienti.png"))); // NOI18N
		jButton2.setToolTipText(Fc.MessageBundle("UIMsg70")); // NOI18N
		jButton2.setPreferredSize(new java.awt.Dimension(33, 33));
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButtonApriPatologie
				.setIcon(new javax.swing.ImageIcon(getClass().getResource(
						"/adisys/server/img/pulsanti/IconaPatologie.png"))); // NOI18N
		jButtonApriPatologie.setEnabled(false);
		jButtonApriPatologie
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonApriPatologieActionPerformed(evt);
					}
				});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane8,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		372,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jPanel1,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						pannelloModifica,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						259,
																						Short.MAX_VALUE)))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel2)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jLabel3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		122,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jButtonApriPatologie,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButtonGoHome,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		33,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addContainerGap()))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
																.addComponent(
																		jLabel2,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jLabel3,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						jButtonGoHome,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						33,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jButton3,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						33,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		jButton2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(
														jButtonApriPatologie,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														33,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jPanel1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		pannelloModifica,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(
														jScrollPane8,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														0, Short.MAX_VALUE))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Pulsante cancella action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteCancellaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteCancellaActionPerformed

		if (tabellaPatologie.getSelectedRow() == -1) {
			JOptionPane.showMessageDialog(
					null,
					Fc.MessageBundle("MsgDialog175") + "\n"
							+ Fc.MessageBundle("MsgDialog140"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);
		} else {
			if (JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg230"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.OK_OPTION) {

				// Recupero ID
				Object id = tabellaPatologie.getValueAt(tabellaPatologie
						.getSelectedRow(), tabellaPatologie.getColumnModel()
						.getColumnIndex("ID"));

				// Casting ID
				// int idIntPat=Integer.valueOf(String.valueOf(id));

				// Cancellazione
				ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
				ArrayList<Object> par = new ArrayList<>();

				// par = new ArrayList<Object>();
				par.add("int");
				par.add(id);
				parametri.add(par);

				iFc.processRequest("cancellaPatologia", parametri);

				// Aggiornamento tabella
				aggiornaTabella();
			}
		}
	}// GEN-LAST:event_pulsanteCancellaActionPerformed

	/**
	 * Pulsante modifica action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteModificaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteModificaActionPerformed

		setModificaPatologia();
	}// GEN-LAST:event_pulsanteModificaActionPerformed

	/**
	 * Pulsante aggiungi action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteAggiungiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteAggiungiActionPerformed

		if (modalita == Modalita.aggiungi) {
			JOptionPane.showMessageDialog(null,
					Fc.MessageBundle("MsgDialog1940"),
					Fc.MessageBundle("MsgDialog4"),
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			setAggiungiPatologia();
		}
	}// GEN-LAST:event_pulsanteAggiungiActionPerformed

	/**
	 * Pulsante ok action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void pulsanteOKActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pulsanteOKActionPerformed
		if (modalita == Modalita.aggiungi) {
			// Aggiunta paziente

			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			ArrayList<Object> par = new ArrayList<>();

			// par = new ArrayList<Object>();
			par.add("String");
			par.add((Object) (textID.getText()));
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) textNome.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) String.valueOf(fieldGravita.getSelectedItem()));
			parametri.add(par);

			iFc.processRequest("creaPatologia", parametri);

		} else if (modalita == Modalita.modifica
				&& (JOptionPane.showConfirmDialog(null,
						Fc.MessageBundle("ConfirmMsg260"),
						Fc.MessageBundle("ConfirmMsg10"),
						JOptionPane.OK_CANCEL_OPTION,
						JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)) {

			ArrayList<ArrayList<Object>> parametri = new ArrayList<>();
			ArrayList<Object> par = new ArrayList<>();

			// par = new ArrayList<Object>();
			par.add("int");
			par.add((Object) Integer.valueOf(textID.getText()));
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) textNome.getText());
			parametri.add(par);

			par = new ArrayList<>();
			par.add("String");
			par.add((Object) String.valueOf(fieldGravita.getSelectedItem()));
			parametri.add(par);

			iFc.processRequest("modificaPatologia", parametri);
		}
		// Aggiornamento tabella
		aggiornaTabella();
		setAggiungiPatologia();
	}// GEN-LAST:event_pulsanteOKActionPerformed

	/**
	 * Field gravita action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void fieldGravitaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fieldGravitaActionPerformed
		//
	}// GEN-LAST:event_fieldGravitaActionPerformed

	/**
	 * J button3 action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg43"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			iFc.processRequest("visualizzaEditorInterventi",
					new ArrayList<ArrayList<Object>>());
			this.setVisible(false);
		}
	}// GEN-LAST:event_jButton3ActionPerformed

	/**
	 * Form window closing.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		int result = 0;
		if (!fieldsAreEmpty())
			result = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg35"), Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
		else
			result = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg30"), Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

		if (result == JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}// GEN-LAST:event_formWindowClosing

	/**
	 * J button go home action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButtonGoHomeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonGoHomeActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg25"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			setVisible(false);
		}
	}// GEN-LAST:event_jButtonGoHomeActionPerformed

	/**
	 * J button2 action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg15"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			setVisible(false);
			iFc.processRequest("visualizzaEditorPazienti",
					new ArrayList<ArrayList<Object>>());
		}
	}// GEN-LAST:event_jButton2ActionPerformed

	/**
	 * J button1 action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg15"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			setVisible(false);
			iFc.processRequest("visualizzaEditorInfermieri",
					new ArrayList<ArrayList<Object>>());
		}
	}// GEN-LAST:event_jButton1ActionPerformed

	/**
	 * J button apri patologie action performed.
	 * 
	 * @param evt
	 *            the evt
	 */
	private void jButtonApriPatologieActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonApriPatologieActionPerformed
		//
		int visible = 0;
		if (!fieldsAreEmpty()) {
			visible = JOptionPane.showConfirmDialog(null,
					Fc.MessageBundle("ConfirmMsg15"),
					Fc.MessageBundle("ConfirmMsg10"),
					JOptionPane.OK_CANCEL_OPTION);
		}
		if (visible == 0) {
			iFc.processRequest("visualizzaEditorPatologie",
					new ArrayList<ArrayList<Object>>());
			this.setVisible(false);
		}
	}// GEN-LAST:event_jButtonApriPatologieActionPerformed

	/**
	 * Start.
	 * 
	 * @param args
	 *            the command line arguments
	 */
	public static void start(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException
				| javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger
					.getLogger(EditorInfermieri.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			// @Override
			public void run() {
				EditorPatologie window = new EditorPatologie(
						new javax.swing.JFrame(), true);
				Dimension risoluzioneSchermo = Toolkit.getDefaultToolkit()
						.getScreenSize();
				window.setLocation(new Point((risoluzioneSchermo.width - window
						.getWidth()) / 2, (risoluzioneSchermo.height - window
						.getHeight()) / 2));

				window.setVisible(true);
			}
		});
	}

	/**
	 * Aggiorna tabella.
	 */
	public void aggiornaTabella() {
		// Popolamento dati
		@SuppressWarnings("unchecked")
		ArrayList<TOPatologia> listaPatologie = (ArrayList<TOPatologia>) iFc
				.processRequest("getTabellaPatologie",
						new ArrayList<ArrayList<Object>>());
		TOPatologia toPatologia;
		DefaultTableModel model = new DefaultTableModel();

		// Assegnazione nomi colonne tabella
		String[] headers = Fc.getTableHeaderNames("JTableEditorPatologie");
		model.setColumnIdentifiers(headers);

		// inserimento dei transfer objects nella tabella
		int tLength = listaPatologie.size();
		for (int i = 0; i < tLength; i++) {
			toPatologia = listaPatologie.get(i);
			String[] row = { String.valueOf(toPatologia.getID()),
					toPatologia.getNome(), toPatologia.getGravita() };
			model.addRow(row);
		}
		tabellaPatologie.setModel(model);
	}

	/**
	 * Sets the aggiungi patologia.
	 */
	private void setAggiungiPatologia() {
		// Setta la variabile modalita
		modalita = Modalita.aggiungi;

		textID.setText("");
		textNome.setText("");
		fieldGravita.setToolTipText(null);
		txInfo.setText(Fc.MessageBundle("MsgDialog630"));
	}

	/**
	 * Sets the modifica patologia.
	 */
	private void setModificaPatologia() {

		if (tabellaPatologie.getSelectedRow() == -1) {
			JOptionPane.showMessageDialog(
					null,
					Fc.MessageBundle("MsgDialog195") + "\n"
							+ Fc.MessageBundle("MsgDialog150"),
					Fc.MessageBundle("MsgDialog6"), JOptionPane.ERROR_MESSAGE);
		} else {

			// Setta la variabile modalita
			modalita = Modalita.modifica;

			// Recupero valori ID NOME COGNOME
			String[] colonne = Fc.getTableHeaderNames("JTableEditorPatologie");
			Object id = tabellaPatologie.getValueAt(tabellaPatologie
					.getSelectedRow(), tabellaPatologie.getColumnModel()
					.getColumnIndex(colonne[0]));
			Object nome = tabellaPatologie.getValueAt(tabellaPatologie
					.getSelectedRow(), tabellaPatologie.getColumnModel()
					.getColumnIndex(colonne[1]));
			Object gravita = tabellaPatologie.getValueAt(tabellaPatologie
					.getSelectedRow(), tabellaPatologie.getColumnModel()
					.getColumnIndex(colonne[2]));

			// Setta il modulo per l'inserimento
			// txID.setText(String.valueOf(id));
			textID.setText(String.valueOf(id));
			textNome.setText(String.valueOf(nome));
			fieldGravita
					.setSelectedIndex(Integer.valueOf(gravita.toString()) - 1);
			txInfo.setText(Fc.MessageBundle("MsgDialog640"));
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	/** The field gravita. */
	@SuppressWarnings("rawtypes")
	private javax.swing.JComboBox fieldGravita;

	/** The j button1. */
	private javax.swing.JButton jButton1;

	/** The j button2. */
	private javax.swing.JButton jButton2;

	/** The j button3. */
	private javax.swing.JButton jButton3;

	/** The j button apri patologie. */
	private javax.swing.JButton jButtonApriPatologie;

	/** The j button go home. */
	private javax.swing.JButton jButtonGoHome;

	/** The j label1. */
	private javax.swing.JLabel jLabel1;

	/** The j label2. */
	private javax.swing.JLabel jLabel2;

	/** The j label21. */
	private javax.swing.JLabel jLabel21;

	/** The j label22. */
	private javax.swing.JLabel jLabel22;

	/** The j label3. */
	private javax.swing.JLabel jLabel3;

	/** The j panel1. */
	private javax.swing.JPanel jPanel1;

	/** The j scroll pane1. */
	private javax.swing.JScrollPane jScrollPane1;

	/** The j scroll pane8. */
	private javax.swing.JScrollPane jScrollPane8;

	/** The pannello modifica. */
	private javax.swing.JPanel pannelloModifica;

	/** The pulsante aggiungi. */
	private javax.swing.JButton pulsanteAggiungi;

	/** The pulsante cancella. */
	private javax.swing.JButton pulsanteCancella;

	/** The pulsante modifica. */
	private javax.swing.JButton pulsanteModifica;

	/** The pulsante ok. */
	private javax.swing.JButton pulsanteOK;

	/** The tabella patologie. */
	private javax.swing.JTable tabellaPatologie;

	/** The text id. */
	private javax.swing.JTextField textID;

	/** The text nome. */
	private javax.swing.JTextField textNome;

	/** The tx info. */
	private javax.swing.JTextArea txInfo;

	// End of variables declaration//GEN-END:variables

	/**
	 * The Enum Modalita.
	 */
	private enum Modalita {

		/** The aggiungi. */
		aggiungi, /** The modifica. */
		modifica
	};

	/** The modalita. */
	private Modalita modalita;

	/**
	 * Fields are empty.
	 * 
	 * @return true, if successful
	 */
	private boolean fieldsAreEmpty() {
		if (textID.getText().isEmpty() && textNome.getText().isEmpty()) {
			return true;
		} else {
			return false;
		}
	}
}
